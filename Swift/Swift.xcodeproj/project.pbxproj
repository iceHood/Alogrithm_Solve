// !$*UTF8*$!
{
	archiveVersion = 1;
	classes = {
	};
	objectVersion = 56;
	objects = {

/* Begin PBXBuildFile section */
		CE042C282A5E765B007A13A2 /* 17404.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE042C272A5E765B007A13A2 /* 17404.swift */; };
		CE04849329DFE619007138A2 /* 97. Interleaving String.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE04849229DFE619007138A2 /* 97. Interleaving String.swift */; };
		CE089BE82A83AFF300CE710E /* 129. Sum Root to Leaf Numbers.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE089BE72A83AFF300CE710E /* 129. Sum Root to Leaf Numbers.swift */; };
		CE089BEA2A8481F400CE710E /* 130. Surrounded Regions.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE089BE92A8481F400CE710E /* 130. Surrounded Regions.swift */; };
		CE089BEC2A866D3800CE710E /* 131. Palindrome Partitioning.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE089BEB2A866D3800CE710E /* 131. Palindrome Partitioning.swift */; };
		CE089BEE2A87B59B00CE710E /* 132. Palindrome Partitioning II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE089BED2A87B59B00CE710E /* 132. Palindrome Partitioning II.swift */; };
		CE089BF02A8A1B9D00CE710E /* 133. Clone Graph.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE089BEF2A8A1B9D00CE710E /* 133. Clone Graph.swift */; };
		CE089BF22A8BAA8600CE710E /* 134. Gas Station.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE089BF12A8BAA8600CE710E /* 134. Gas Station.swift */; };
		CE089BF42A8DABBA00CE710E /* 137. Single Number II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE089BF32A8DABBA00CE710E /* 137. Single Number II.swift */; };
		CE089BF62A90FD9B00CE710E /* 138. Copy List with Random Pointer.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE089BF52A90FD9B00CE710E /* 138. Copy List with Random Pointer.swift */; };
		CE089BF82A91FCF600CE710E /* 139. Word Break.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE089BF72A91FCF600CE710E /* 139. Word Break.swift */; };
		CE09DE3029DD7A2800FDAEC9 /* 95. Unique Binary Search Trees II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE09DE2F29DD7A2800FDAEC9 /* 95. Unique Binary Search Trees II.swift */; };
		CE0F601E2A665F8F0085D110 /* 17387.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE0F601D2A665F8F0085D110 /* 17387.swift */; };
		CE12D1C22A0F557F00801C5A /* 104. Maximum Depth of Binary Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE12D1C12A0F557F00801C5A /* 104. Maximum Depth of Binary Tree.swift */; };
		CE12D1C42A110FE900801C5A /* 105. Construct Binary Tree from Preorder and Inorder Traversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE12D1C32A110FE900801C5A /* 105. Construct Binary Tree from Preorder and Inorder Traversal.swift */; };
		CE1462F729C6F49000DF279D /* 80. Remove Duplicates from Sorted Array II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE1462F629C6F49000DF279D /* 80. Remove Duplicates from Sorted Array II.swift */; };
		CE18B12F2A4319A7009E23D5 /* 117. Populating Next Right Pointers in Each Node II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE18B12E2A4319A7009E23D5 /* 117. Populating Next Right Pointers in Each Node II.swift */; };
		CE19AC282A5BD6A000B84020 /* 13460.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE19AC272A5BD6A000B84020 /* 13460.swift */; };
		CE19AC5C2A5CF2FA00B84020 /* 27172.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE19AC5B2A5CF2FA00B84020 /* 27172.swift */; };
		CE247EE32A7FC3670002660A /* 124. Binary Tree Maximum Path Sum.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE247EE22A7FC3670002660A /* 124. Binary Tree Maximum Path Sum.swift */; };
		CE247EE52A8107120002660A /* 125. Valid Palindrome.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE247EE42A8107120002660A /* 125. Valid Palindrome.swift */; };
		CE24A6452A502DED000285B9 /* 2252.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE24A6442A502DED000285B9 /* 2252.swift */; };
		CE24A6472A519F53000285B9 /* 2623.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE24A6462A519F53000285B9 /* 2623.swift */; };
		CE28710329B9A5D60036D922 /* 70. Climbing Stairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE28710229B9A5D60036D922 /* 70. Climbing Stairs.swift */; };
		CE28710529BAFB1D0036D922 /* 71. Simplify Path.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE28710429BAFB1D0036D922 /* 71. Simplify Path.swift */; };
		CE2AE7A62A6D3C07003E7FAF /* 2042.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE2AE7A52A6D3C07003E7FAF /* 2042.swift */; };
		CE2BA4C029D12CBC006614A0 /* 89. Gray Code.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE2BA4BF29D12CBC006614A0 /* 89. Gray Code.swift */; };
		CE31A41E2A0883E10058A811 /* 2098.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE31A41D2A0883E10058A811 /* 2098.swift */; };
		CE3352DB29D0853800CC645D /* 88. Merge Sorted Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE3352DA29D0853800CC645D /* 88. Merge Sorted Array.swift */; };
		CE33ECAE2A16F7C900E2277E /* 108. Convert Sorted Array to Binary Search Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE33ECAD2A16F7C900E2277E /* 108. Convert Sorted Array to Binary Search Tree.swift */; };
		CE3483BF2A1EE23A008AABC7 /* 114. Flatten Binary Tree to Linked List.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE3483BE2A1EE23A008AABC7 /* 114. Flatten Binary Tree to Linked List.swift */; };
		CE3483C12A204A49008AABC7 /* 115. Distinct Subsequences.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE3483C02A204A49008AABC7 /* 115. Distinct Subsequences.swift */; };
		CE34E02629DE4A5E002C9B72 /* 96. Unique Binary Search Trees.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE34E02529DE4A5E002C9B72 /* 96. Unique Binary Search Trees.swift */; };
		CE38E67B2A99F9C8003215E4 /* 146. LRU Cache.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE38E67A2A99F9C8003215E4 /* 146. LRU Cache.swift */; };
		CE38E67D2A9CD09A003215E4 /* 147. Insertion Sort List.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE38E67C2A9CD09A003215E4 /* 147. Insertion Sort List.swift */; };
		CE39DDB22A1C757B0005D489 /* 112. Path Sum.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE39DDB12A1C757B0005D489 /* 112. Path Sum.swift */; };
		CE39DDE02A1DFE3E0005D489 /* 113. Path Sum II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE39DDDF2A1DFE3E0005D489 /* 113. Path Sum II.swift */; };
		CE3D5CBC2A69189100DCBA13 /* 13334.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE3D5CBB2A69189100DCBA13 /* 13334.swift */; };
		CE41D9E02A773D1F0061D4D2 /* 120. Triangle.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE41D9DF2A773D1F0061D4D2 /* 120. Triangle.swift */; };
		CE41D9E42A788B2D0061D4D2 /* 121. Best Time to Buy and Sell Stock.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE41D9E32A788B2D0061D4D2 /* 121. Best Time to Buy and Sell Stock.swift */; };
		CE4B855B29B5754D00BBFC26 /* 67. Add Binary.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4B855A29B5754D00BBFC26 /* 67. Add Binary.swift */; };
		CE4B855D29B7598200BBFC26 /* 68. Text Justification.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4B855C29B7598200BBFC26 /* 68. Text Justification.swift */; };
		CE4B855F29BCB12700BBFC26 /* 72. Edit Distance.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4B855E29BCB12700BBFC26 /* 72. Edit Distance.swift */; };
		CE4BCF6729B4C98E00D40AAB /* 12851.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF2D29B4C98E00D40AAB /* 12851.swift */; };
		CE4BCF6829B4C98E00D40AAB /* 1138.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF2E29B4C98E00D40AAB /* 1138.swift */; };
		CE4BCF6929B4C98E00D40AAB /* 1063.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF2F29B4C98E00D40AAB /* 1063.swift */; };
		CE4BCF6A29B4C98E00D40AAB /* 62. Unique Paths.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3129B4C98E00D40AAB /* 62. Unique Paths.swift */; };
		CE4BCF6B29B4C98E00D40AAB /* 43. Multiply Strings .swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3229B4C98E00D40AAB /* 43. Multiply Strings .swift */; };
		CE4BCF6C29B4C98E00D40AAB /* 63. Unique Paths II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3329B4C98E00D40AAB /* 63. Unique Paths II.swift */; };
		CE4BCF6D29B4C98E00D40AAB /* 31. Next Permutation.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3429B4C98E00D40AAB /* 31. Next Permutation.swift */; };
		CE4BCF6E29B4C98E00D40AAB /* 48. Rotate Image .swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3529B4C98E00D40AAB /* 48. Rotate Image .swift */; };
		CE4BCF6F29B4C98E00D40AAB /* 14. Longest Common Prefix.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3629B4C98E00D40AAB /* 14. Longest Common Prefix.swift */; };
		CE4BCF7029B4C98E00D40AAB /* 44. Wildcard Matching.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3729B4C98E00D40AAB /* 44. Wildcard Matching.swift */; };
		CE4BCF7129B4C98E00D40AAB /* 64. Minimum Path Sum.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3829B4C98E00D40AAB /* 64. Minimum Path Sum.swift */; };
		CE4BCF7229B4C98E00D40AAB /* 47. Permutations II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3929B4C98E00D40AAB /* 47. Permutations II.swift */; };
		CE4BCF7329B4C98E00D40AAB /* 42. Trapping Rain Water .swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3A29B4C98E00D40AAB /* 42. Trapping Rain Water .swift */; };
		CE4BCF7429B4C98E00D40AAB /* 40. Combination Sum II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3B29B4C98E00D40AAB /* 40. Combination Sum II.swift */; };
		CE4BCF7529B4C98E00D40AAB /* 39. Combination Sum.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3C29B4C98E00D40AAB /* 39. Combination Sum.swift */; };
		CE4BCF7629B4C98E00D40AAB /* 23. Merge k Sorted Lists.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3D29B4C98E00D40AAB /* 23. Merge k Sorted Lists.swift */; };
		CE4BCF7729B4C98E00D40AAB /* 53. Maximum Subarray.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3E29B4C98E00D40AAB /* 53. Maximum Subarray.swift */; };
		CE4BCF7829B4C98E00D40AAB /* enum에 관한 고찰.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF3F29B4C98E00D40AAB /* enum에 관한 고찰.swift */; };
		CE4BCF7929B4C98E00D40AAB /* 19. Remove Nth Node From End of List.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4029B4C98E00D40AAB /* 19. Remove Nth Node From End of List.swift */; };
		CE4BCF7A29B4C98E00D40AAB /* 56. Merge Intervals.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4129B4C98E00D40AAB /* 56. Merge Intervals.swift */; };
		CE4BCF7B29B4C98E00D40AAB /* 24. Swap Nodes in Pairs.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4229B4C98E00D40AAB /* 24. Swap Nodes in Pairs.swift */; };
		CE4BCF7C29B4C98E00D40AAB /* 61. Rotate List.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4329B4C98E00D40AAB /* 61. Rotate List.swift */; };
		CE4BCF7D29B4C98E00D40AAB /* 45. Jump Game II .swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4429B4C98E00D40AAB /* 45. Jump Game II .swift */; };
		CE4BCF7E29B4C98E00D40AAB /* 26. Remove Duplicates from Sorted Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4529B4C98E00D40AAB /* 26. Remove Duplicates from Sorted Array.swift */; };
		CE4BCF7F29B4C98E00D40AAB /* 18. 4Sum.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4629B4C98E00D40AAB /* 18. 4Sum.swift */; };
		CE4BCF8029B4C98E00D40AAB /* 34. Find First and Last Position of Element in Sorted Array.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4729B4C98E00D40AAB /* 34. Find First and Last Position of Element in Sorted Array.swift */; };
		CE4BCF8129B4C98E00D40AAB /* 65. Valid Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4829B4C98E00D40AAB /* 65. Valid Number.swift */; };
		CE4BCF8229B4C98E00D40AAB /* 57. Insert Interval.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4929B4C98E00D40AAB /* 57. Insert Interval.swift */; };
		CE4BCF8329B4C98E00D40AAB /* 27. Remove Element.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4A29B4C98E00D40AAB /* 27. Remove Element.swift */; };
		CE4BCF8429B4C98E00D40AAB /* 17. Letter Combinations of a Phone Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4B29B4C98E00D40AAB /* 17. Letter Combinations of a Phone Number.swift */; };
		CE4BCF8529B4C98E00D40AAB /* 30. Substring with Concatenation of All Words.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4C29B4C98E00D40AAB /* 30. Substring with Concatenation of All Words.swift */; };
		CE4BCF8629B4C98E00D40AAB /* 25. Reverse Nodes in k-Group.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4D29B4C98E00D40AAB /* 25. Reverse Nodes in k-Group.swift */; };
		CE4BCF8729B4C98E00D40AAB /* 55. Jump Game.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4E29B4C98E00D40AAB /* 55. Jump Game.swift */; };
		CE4BCF8829B4C98E00D40AAB /* 28. Find the Index of the First Occurrence in a String .swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF4F29B4C98E00D40AAB /* 28. Find the Index of the First Occurrence in a String .swift */; };
		CE4BCF8929B4C98E00D40AAB /* 13. Roman to Integer.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5029B4C98E00D40AAB /* 13. Roman to Integer.swift */; };
		CE4BCF8A29B4C98E00D40AAB /* 60. Permutation Sequence.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5129B4C98E00D40AAB /* 60. Permutation Sequence.swift */; };
		CE4BCF8B29B4C98E00D40AAB /* 59. Spiral Matrix II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5229B4C98E00D40AAB /* 59. Spiral Matrix II.swift */; };
		CE4BCF8C29B4C98E00D40AAB /* 11. Container With Most Water.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5329B4C98E00D40AAB /* 11. Container With Most Water.swift */; };
		CE4BCF8D29B4C98E00D40AAB /* 36. Valid Sudoku.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5429B4C98E00D40AAB /* 36. Valid Sudoku.swift */; };
		CE4BCF8E29B4C98E00D40AAB /* 21. Merge Two Sorted Lists.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5529B4C98E00D40AAB /* 21. Merge Two Sorted Lists.swift */; };
		CE4BCF8F29B4C98E00D40AAB /* 37. Sudoku Solver .swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5629B4C98E00D40AAB /* 37. Sudoku Solver .swift */; };
		CE4BCF9029B4C98E00D40AAB /* 58. Length of Last Word.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5729B4C98E00D40AAB /* 58. Length of Last Word.swift */; };
		CE4BCF9129B4C98E00D40AAB /* 54. Spiral Matrix.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5829B4C98E00D40AAB /* 54. Spiral Matrix.swift */; };
		CE4BCF9229B4C98E00D40AAB /* 15. 3Sum.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5929B4C98E00D40AAB /* 15. 3Sum.swift */; };
		CE4BCF9329B4C98E00D40AAB /* 38. Count and Say.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5A29B4C98E00D40AAB /* 38. Count and Say.swift */; };
		CE4BCF9429B4C98E00D40AAB /* 22. Generate Parentheses.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5B29B4C98E00D40AAB /* 22. Generate Parentheses.swift */; };
		CE4BCF9629B4C98E00D40AAB /* 12. Integer to Roman.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5D29B4C98E00D40AAB /* 12. Integer to Roman.swift */; };
		CE4BCF9729B4C98E00D40AAB /* 41. First Missing Positive.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5E29B4C98E00D40AAB /* 41. First Missing Positive.swift */; };
		CE4BCF9829B4C98E00D40AAB /* 46. Permutations .swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF5F29B4C98E00D40AAB /* 46. Permutations .swift */; };
		CE4BCF9929B4C98E00D40AAB /* 35. Search Insert Position.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF6029B4C98E00D40AAB /* 35. Search Insert Position.swift */; };
		CE4BCF9A29B4C98E00D40AAB /* 20. Valid Parentheses.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF6129B4C98E00D40AAB /* 20. Valid Parentheses.swift */; };
		CE4BCF9B29B4C98E00D40AAB /* 66. Plus One.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF6229B4C98E00D40AAB /* 66. Plus One.swift */; };
		CE4BCF9C29B4C98E00D40AAB /* 29FAIL.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF6329B4C98E00D40AAB /* 29FAIL.swift */; };
		CE4BCF9D29B4C98E00D40AAB /* 16. 3Sum Closeset.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF6429B4C98E00D40AAB /* 16. 3Sum Closeset.swift */; };
		CE4BCF9E29B4C98E00D40AAB /* 49. Group Anagrams.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF6529B4C98E00D40AAB /* 49. Group Anagrams.swift */; };
		CE4BCF9F29B4C98E00D40AAB /* 50. Pow(x, n) .swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCF6629B4C98E00D40AAB /* 50. Pow(x, n) .swift */; };
		CE4BCFA129B4C9C800D40AAB /* main.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4BCFA029B4C9C800D40AAB /* main.swift */; };
		CE4C369B2A45467A00ECD28A /* 1208.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE4C369A2A45467A00ECD28A /* 1208.swift */; };
		CE5FC3372A4088BD0019D702 /* 1766.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE5FC3362A4088BD0019D702 /* 1766.swift */; };
		CE6125272A051E370091AE2A /* 7579.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE6125262A051E370091AE2A /* 7579.swift */; };
		CE6125292A0637660091AE2A /* 2342.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE6125282A0637660091AE2A /* 2342.swift */; };
		CE662C682A494EF300DB1EF5 /* 1806.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE662C672A494EF300DB1EF5 /* 1806.swift */; };
		CE6775C82A0E14AF00ABE0C5 /* 11049.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE6775C72A0E14AF00ABE0C5 /* 11049.swift */; };
		CE680F062A7265E000F29DC5 /* 118. Pascal's Triangle.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE680F052A7265E000F29DC5 /* 118. Pascal's Triangle.swift */; };
		CE680F082A75FD8000F29DC5 /* 119. Pascal's Triangle II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE680F072A75FD8000F29DC5 /* 119. Pascal's Triangle II.swift */; };
		CE680F0A2A7BEDB100F29DC5 /* 122. Best Time to Buy and Sell Stock II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE680F092A7BEDB100F29DC5 /* 122. Best Time to Buy and Sell Stock II.swift */; };
		CE680F0C2A7D342600F29DC5 /* 123. Best Time to Buy and Sell Stock III.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE680F0B2A7D342600F29DC5 /* 123. Best Time to Buy and Sell Stock III.swift */; };
		CE6C0E3D29D854E8009F0E7E /* 93. Restore IP Addresses.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE6C0E3C29D854E8009F0E7E /* 93. Restore IP Addresses.swift */; };
		CE6E6AC529B87584002ECE48 /* 69. Sqrt(x).swift in Sources */ = {isa = PBXBuildFile; fileRef = CE6E6AC429B87584002ECE48 /* 69. Sqrt(x).swift */; };
		CE6EA18E29C207DB00F8845F /* 77. Combinations.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE6EA18D29C207DB00F8845F /* 77. Combinations.swift */; };
		CE6F71C72A92EE2F002D3B61 /* 141. Linked List Cycle.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE6F71C62A92EE2F002D3B61 /* 141. Linked List Cycle.swift */; };
		CE72066929D26ED700C7CB0A /* 90. Subsets II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE72066829D26ED700C7CB0A /* 90. Subsets II.swift */; };
		CE72A0462A67BAC90071398A /* 2533.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE72A0452A67BAC90071398A /* 2533.swift */; };
		CE7395F729CAF07500113D67 /* 83. Remove Duplicates from Sorted List.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE7395F629CAF07500113D67 /* 83. Remove Duplicates from Sorted List.swift */; };
		CE74302529D572AC0073F8EB /* 91. Decode Ways.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE74302429D572AC0073F8EB /* 91. Decode Ways.swift */; };
		CE79E0EA2A6A227400A3F68D /* 1019.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE79E0E92A6A227400A3F68D /* 1019.swift */; };
		CE7E88ED2A5266AB0018431A /* 9328.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE7E88EC2A5266AB0018431A /* 9328.swift */; };
		CE81EE7429E1107D00DC1EA6 /* 98. Validate Binary Search Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE81EE7329E1107D00DC1EA6 /* 98. Validate Binary Search Tree.swift */; };
		CE83D69E2A1AECEF00492517 /* 111. Minimum Depth of Binary Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE83D69D2A1AECEF00492517 /* 111. Minimum Depth of Binary Tree.swift */; };
		CE8B42512A44077D00744262 /* 2143.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE8B42502A44077D00744262 /* 2143.swift */; };
		CE8D50C32A4179E00010E7B0 /* 9252.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE8D50C22A4179E00010E7B0 /* 9252.swift */; };
		CE9050172A23872200057B67 /* 116. Populating Next Right Pointers in Each Node.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE9050162A23872200057B67 /* 116. Populating Next Right Pointers in Each Node.swift */; };
		CE9099312A4707B700E0E19D /* 1562.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE9099302A4707B700E0E19D /* 1562.swift */; };
		CE91EB3D29C584A600F1005A /* 79. Word Search.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE91EB3C29C584A600F1005A /* 79. Word Search.swift */; };
		CE96333E2A55333C009D75C6 /* 2473.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE96333D2A55333C009D75C6 /* 2473.swift */; };
		CE9D853E2A59C29000492BC4 /* 12100.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE9D853D2A59C29000492BC4 /* 12100.swift */; };
		CE9D85412A5FAB8200492BC4 /* 16724.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE9D85402A5FAB8200492BC4 /* 16724.swift */; };
		CE9D858D2A60FB2700492BC4 /* 20303.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE9D858C2A60FB2700492BC4 /* 20303.swift */; };
		CE9D85A92A6288C800492BC4 /* 9527.swift in Sources */ = {isa = PBXBuildFile; fileRef = CE9D85A82A6288C800492BC4 /* 9527.swift */; };
		CEA1F8DA2A07CDBB00B9EF96 /* 101. Symmetric Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEA1F8D92A07CDBB00B9EF96 /* 101. Symmetric Tree.swift */; };
		CEA44C502A18ED4B009A0C6D /* 109. Convert Sorted List to Binary Search Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEA44C4F2A18ED4B009A0C6D /* 109. Convert Sorted List to Binary Search Tree.swift */; };
		CEAF83582A4BC145007C7862 /* 2166.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEAF83572A4BC145007C7862 /* 2166.swift */; };
		CEB026A82A6E129B00AF659A /* 2357.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEB026A72A6E129B00AF659A /* 2357.swift */; };
		CEB026C42A6F63CD00AF659A /* 14725.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEB026C32A6F63CD00AF659A /* 14725.swift */; };
		CEB026CA2A70DCC700AF659A /* 11505.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEB026C92A70DCC700AF659A /* 11505.swift */; };
		CEB50BEB2A1369F700490242 /* 106. Construct Binary Tree from Inorder and Postorder Traversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEB50BEA2A1369F700490242 /* 106. Construct Binary Tree from Inorder and Postorder Traversal.swift */; };
		CEB50BED2A14C6AC00490242 /* 107. Binary Tree Level Order Traversal II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEB50BEC2A14C6AC00490242 /* 107. Binary Tree Level Order Traversal II.swift */; };
		CEBD9A9B2A64D7DF001CD12A /* 16946.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEBD9A9A2A64D7DF001CD12A /* 16946.swift */; };
		CEC328522A4DA717000B3317 /* 2467.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEC328512A4DA717000B3317 /* 2467.swift */; };
		CEC328542A4E829F000B3317 /* 2239.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEC328532A4E829F000B3317 /* 2239.swift */; };
		CEC45B0A29C934AF00B0A05A /* 82. Remove Duplicates from Sorted List II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEC45B0929C934AF00B0A05A /* 82. Remove Duplicates from Sorted List II.swift */; };
		CEC4C1322A828B8100429E02 /* 128. Longest Consecutive Sequence.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEC4C1312A828B8100429E02 /* 128. Longest Consecutive Sequence.swift */; };
		CEC869172A8CBA5600BB7FE4 /* 136. Single Number.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEC869162A8CBA5600BB7FE4 /* 136. Single Number.swift */; };
		CEC91B1E29CC113600993657 /* 84. Largest Rectangle in Histogram.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEC91B1D29CC113600993657 /* 84. Largest Rectangle in Histogram.swift */; };
		CEC91B2329CD644E00993657 /* 85. Maximal Rectangle.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEC91B2229CD644E00993657 /* 85. Maximal Rectangle.swift */; };
		CEC9D52B29C7E95300F1142A /* 81. Search in Rotated Sorted Array II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEC9D52A29C7E95300F1142A /* 81. Search in Rotated Sorted Array II.swift */; };
		CECDB8D229C0072C008FDAA8 /* 75. Sort Colors.swift in Sources */ = {isa = PBXBuildFile; fileRef = CECDB8D129C0072C008FDAA8 /* 75. Sort Colors.swift */; };
		CECDB8EB29C2A7BD008FDAA8 /* 76. Minimum Window Substring.swift in Sources */ = {isa = PBXBuildFile; fileRef = CECDB8EA29C2A7BD008FDAA8 /* 76. Minimum Window Substring.swift */; };
		CED04C082A11C0B400A3DB77 /* 1644.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED04C072A11C0B400A3DB77 /* 1644.swift */; };
		CED0FFCF2A7A237A00D973BA /* 1708.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED0FFCE2A7A237A00D973BA /* 1708.swift */; };
		CED196B32A00912B00EED431 /* 99. Recover Binary Search Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED196B22A00912B00EED431 /* 99. Recover Binary Search Tree.swift */; };
		CED1C42B29C4232300539801 /* 78. Subsets.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED1C42A29C4232300539801 /* 78. Subsets.swift */; };
		CED292AD29D8FC9200C90AD3 /* 94. Binary Tree Inorder Traversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED292AC29D8FC9200C90AD3 /* 94. Binary Tree Inorder Traversal.swift */; };
		CED3E7842A57091600D0B772 /* 9466.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED3E7832A57091600D0B772 /* 9466.swift */; };
		CED3E7862A57B77500D0B772 /* 12015.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED3E7852A57B77500D0B772 /* 12015.swift */; };
		CED6127129BDC48B006E2EE1 /* 73. Set Matrix Zeroes.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED6127029BDC48B006E2EE1 /* 73. Set Matrix Zeroes.swift */; };
		CED612C929BF544A006E2EE1 /* 74. Search a 2D Matrix.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED612C829BF544A006E2EE1 /* 74. Search a 2D Matrix.swift */; };
		CED676122A53AF5D0040531F /* 10942.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED676112A53AF5D0040531F /* 10942.swift */; };
		CED8EE4B2A0C6CAE0007AD4D /* 103. Binary Tree Zigzag Level Order Traversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = CED8EE4A2A0C6CAE0007AD4D /* 103. Binary Tree Zigzag Level Order Traversal.swift */; };
		CEE019CB2A9474B9003B733B /* 142. Linked List Cycle II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEE019CA2A9474B9003B733B /* 142. Linked List Cycle II.swift */; };
		CEE019CD2A95F469003B733B /* 143. Reorder List.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEE019CC2A95F469003B733B /* 143. Reorder List.swift */; };
		CEE019CF2A978EDD003B733B /* 144. Binary Tree Preorder Traversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEE019CE2A978EDD003B733B /* 144. Binary Tree Preorder Traversal.swift */; };
		CEE019D12A98EA92003B733B /* 145. Binary Tree Postorder Traversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEE019D02A98EA92003B733B /* 145. Binary Tree Postorder Traversal.swift */; };
		CEE035D029CE97C3006444EF /* 86. Partition List.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEE035CF29CE97C3006444EF /* 86. Partition List.swift */; };
		CEE1F60C2A09CFAA00C1A7DA /* 102. Binary Tree Level Order Traversal.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEE1F60B2A09CFAA00C1A7DA /* 102. Binary Tree Level Order Traversal.swift */; };
		CEE330142A19FEDF00C8CEE0 /* 110. Balanced Binary Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEE330132A19FEDF00C8CEE0 /* 110. Balanced Binary Tree.swift */; };
		CEE7E78529D660410011FEE3 /* 92. Reverse Linked List II.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEE7E78429D660410011FEE3 /* 92. Reverse Linked List II.swift */; };
		CEEC282C2A0250FE00CFE4DA /* 100. Same Tree.swift in Sources */ = {isa = PBXBuildFile; fileRef = CEEC282B2A0250FE00CFE4DA /* 100. Same Tree.swift */; };
/* End PBXBuildFile section */

/* Begin PBXCopyFilesBuildPhase section */
		CE3A6187296557E30012280D /* CopyFiles */ = {
			isa = PBXCopyFilesBuildPhase;
			buildActionMask = 2147483647;
			dstPath = /usr/share/man/man1/;
			dstSubfolderSpec = 0;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 1;
		};
/* End PBXCopyFilesBuildPhase section */

/* Begin PBXFileReference section */
		CE042C272A5E765B007A13A2 /* 17404.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 17404.swift; sourceTree = "<group>"; };
		CE04849229DFE619007138A2 /* 97. Interleaving String.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "97. Interleaving String.swift"; sourceTree = "<group>"; };
		CE089BE72A83AFF300CE710E /* 129. Sum Root to Leaf Numbers.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "129. Sum Root to Leaf Numbers.swift"; sourceTree = "<group>"; };
		CE089BE92A8481F400CE710E /* 130. Surrounded Regions.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "130. Surrounded Regions.swift"; sourceTree = "<group>"; };
		CE089BEB2A866D3800CE710E /* 131. Palindrome Partitioning.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "131. Palindrome Partitioning.swift"; sourceTree = "<group>"; };
		CE089BED2A87B59B00CE710E /* 132. Palindrome Partitioning II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "132. Palindrome Partitioning II.swift"; sourceTree = "<group>"; };
		CE089BEF2A8A1B9D00CE710E /* 133. Clone Graph.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "133. Clone Graph.swift"; sourceTree = "<group>"; };
		CE089BF12A8BAA8600CE710E /* 134. Gas Station.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "134. Gas Station.swift"; sourceTree = "<group>"; };
		CE089BF32A8DABBA00CE710E /* 137. Single Number II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "137. Single Number II.swift"; sourceTree = "<group>"; };
		CE089BF52A90FD9B00CE710E /* 138. Copy List with Random Pointer.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "138. Copy List with Random Pointer.swift"; sourceTree = "<group>"; };
		CE089BF72A91FCF600CE710E /* 139. Word Break.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "139. Word Break.swift"; sourceTree = "<group>"; };
		CE09DE2F29DD7A2800FDAEC9 /* 95. Unique Binary Search Trees II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "95. Unique Binary Search Trees II.swift"; sourceTree = "<group>"; };
		CE0F601D2A665F8F0085D110 /* 17387.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 17387.swift; sourceTree = "<group>"; };
		CE12D1C12A0F557F00801C5A /* 104. Maximum Depth of Binary Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "104. Maximum Depth of Binary Tree.swift"; sourceTree = "<group>"; };
		CE12D1C32A110FE900801C5A /* 105. Construct Binary Tree from Preorder and Inorder Traversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "105. Construct Binary Tree from Preorder and Inorder Traversal.swift"; sourceTree = "<group>"; };
		CE1462F629C6F49000DF279D /* 80. Remove Duplicates from Sorted Array II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "80. Remove Duplicates from Sorted Array II.swift"; sourceTree = "<group>"; };
		CE18B12E2A4319A7009E23D5 /* 117. Populating Next Right Pointers in Each Node II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "117. Populating Next Right Pointers in Each Node II.swift"; sourceTree = "<group>"; };
		CE19AC272A5BD6A000B84020 /* 13460.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 13460.swift; sourceTree = "<group>"; };
		CE19AC5B2A5CF2FA00B84020 /* 27172.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 27172.swift; sourceTree = "<group>"; };
		CE247EE22A7FC3670002660A /* 124. Binary Tree Maximum Path Sum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "124. Binary Tree Maximum Path Sum.swift"; sourceTree = "<group>"; };
		CE247EE42A8107120002660A /* 125. Valid Palindrome.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "125. Valid Palindrome.swift"; sourceTree = "<group>"; };
		CE24A6442A502DED000285B9 /* 2252.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2252.swift; sourceTree = "<group>"; };
		CE24A6462A519F53000285B9 /* 2623.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2623.swift; sourceTree = "<group>"; };
		CE28710229B9A5D60036D922 /* 70. Climbing Stairs.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "70. Climbing Stairs.swift"; sourceTree = "<group>"; };
		CE28710429BAFB1D0036D922 /* 71. Simplify Path.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "71. Simplify Path.swift"; sourceTree = "<group>"; };
		CE2AE7A52A6D3C07003E7FAF /* 2042.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2042.swift; sourceTree = "<group>"; };
		CE2BA4BF29D12CBC006614A0 /* 89. Gray Code.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "89. Gray Code.swift"; sourceTree = "<group>"; };
		CE31A41D2A0883E10058A811 /* 2098.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2098.swift; sourceTree = "<group>"; };
		CE3352DA29D0853800CC645D /* 88. Merge Sorted Array.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "88. Merge Sorted Array.swift"; sourceTree = "<group>"; };
		CE33ECAD2A16F7C900E2277E /* 108. Convert Sorted Array to Binary Search Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "108. Convert Sorted Array to Binary Search Tree.swift"; sourceTree = "<group>"; };
		CE3483BE2A1EE23A008AABC7 /* 114. Flatten Binary Tree to Linked List.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "114. Flatten Binary Tree to Linked List.swift"; sourceTree = "<group>"; };
		CE3483C02A204A49008AABC7 /* 115. Distinct Subsequences.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "115. Distinct Subsequences.swift"; sourceTree = "<group>"; };
		CE34E02529DE4A5E002C9B72 /* 96. Unique Binary Search Trees.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "96. Unique Binary Search Trees.swift"; sourceTree = "<group>"; };
		CE38E67A2A99F9C8003215E4 /* 146. LRU Cache.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "146. LRU Cache.swift"; sourceTree = "<group>"; };
		CE38E67C2A9CD09A003215E4 /* 147. Insertion Sort List.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "147. Insertion Sort List.swift"; sourceTree = "<group>"; };
		CE39DDB12A1C757B0005D489 /* 112. Path Sum.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "112. Path Sum.swift"; sourceTree = "<group>"; };
		CE39DDDF2A1DFE3E0005D489 /* 113. Path Sum II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "113. Path Sum II.swift"; sourceTree = "<group>"; };
		CE3A6189296557E30012280D /* Algorithm_Swift */ = {isa = PBXFileReference; explicitFileType = "compiled.mach-o.executable"; includeInIndex = 0; path = Algorithm_Swift; sourceTree = BUILT_PRODUCTS_DIR; };
		CE3D5CBB2A69189100DCBA13 /* 13334.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 13334.swift; sourceTree = "<group>"; };
		CE41D9DF2A773D1F0061D4D2 /* 120. Triangle.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "120. Triangle.swift"; sourceTree = "<group>"; };
		CE41D9E32A788B2D0061D4D2 /* 121. Best Time to Buy and Sell Stock.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "121. Best Time to Buy and Sell Stock.swift"; sourceTree = "<group>"; };
		CE4B855A29B5754D00BBFC26 /* 67. Add Binary.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "67. Add Binary.swift"; sourceTree = "<group>"; };
		CE4B855C29B7598200BBFC26 /* 68. Text Justification.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "68. Text Justification.swift"; sourceTree = "<group>"; };
		CE4B855E29BCB12700BBFC26 /* 72. Edit Distance.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "72. Edit Distance.swift"; sourceTree = "<group>"; };
		CE4BCF2D29B4C98E00D40AAB /* 12851.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = 12851.swift; sourceTree = "<group>"; };
		CE4BCF2E29B4C98E00D40AAB /* 1138.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = 1138.swift; sourceTree = "<group>"; };
		CE4BCF2F29B4C98E00D40AAB /* 1063.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = 1063.swift; sourceTree = "<group>"; };
		CE4BCF3129B4C98E00D40AAB /* 62. Unique Paths.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "62. Unique Paths.swift"; sourceTree = "<group>"; };
		CE4BCF3229B4C98E00D40AAB /* 43. Multiply Strings .swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "43. Multiply Strings .swift"; sourceTree = "<group>"; };
		CE4BCF3329B4C98E00D40AAB /* 63. Unique Paths II.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "63. Unique Paths II.swift"; sourceTree = "<group>"; };
		CE4BCF3429B4C98E00D40AAB /* 31. Next Permutation.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "31. Next Permutation.swift"; sourceTree = "<group>"; };
		CE4BCF3529B4C98E00D40AAB /* 48. Rotate Image .swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "48. Rotate Image .swift"; sourceTree = "<group>"; };
		CE4BCF3629B4C98E00D40AAB /* 14. Longest Common Prefix.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "14. Longest Common Prefix.swift"; sourceTree = "<group>"; };
		CE4BCF3729B4C98E00D40AAB /* 44. Wildcard Matching.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "44. Wildcard Matching.swift"; sourceTree = "<group>"; };
		CE4BCF3829B4C98E00D40AAB /* 64. Minimum Path Sum.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "64. Minimum Path Sum.swift"; sourceTree = "<group>"; };
		CE4BCF3929B4C98E00D40AAB /* 47. Permutations II.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "47. Permutations II.swift"; sourceTree = "<group>"; };
		CE4BCF3A29B4C98E00D40AAB /* 42. Trapping Rain Water .swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "42. Trapping Rain Water .swift"; sourceTree = "<group>"; };
		CE4BCF3B29B4C98E00D40AAB /* 40. Combination Sum II.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "40. Combination Sum II.swift"; sourceTree = "<group>"; };
		CE4BCF3C29B4C98E00D40AAB /* 39. Combination Sum.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "39. Combination Sum.swift"; sourceTree = "<group>"; };
		CE4BCF3D29B4C98E00D40AAB /* 23. Merge k Sorted Lists.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "23. Merge k Sorted Lists.swift"; sourceTree = "<group>"; };
		CE4BCF3E29B4C98E00D40AAB /* 53. Maximum Subarray.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "53. Maximum Subarray.swift"; sourceTree = "<group>"; };
		CE4BCF3F29B4C98E00D40AAB /* enum에 관한 고찰.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "enum에 관한 고찰.swift"; sourceTree = "<group>"; };
		CE4BCF4029B4C98E00D40AAB /* 19. Remove Nth Node From End of List.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "19. Remove Nth Node From End of List.swift"; sourceTree = "<group>"; };
		CE4BCF4129B4C98E00D40AAB /* 56. Merge Intervals.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "56. Merge Intervals.swift"; sourceTree = "<group>"; };
		CE4BCF4229B4C98E00D40AAB /* 24. Swap Nodes in Pairs.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "24. Swap Nodes in Pairs.swift"; sourceTree = "<group>"; };
		CE4BCF4329B4C98E00D40AAB /* 61. Rotate List.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "61. Rotate List.swift"; sourceTree = "<group>"; };
		CE4BCF4429B4C98E00D40AAB /* 45. Jump Game II .swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "45. Jump Game II .swift"; sourceTree = "<group>"; };
		CE4BCF4529B4C98E00D40AAB /* 26. Remove Duplicates from Sorted Array.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "26. Remove Duplicates from Sorted Array.swift"; sourceTree = "<group>"; };
		CE4BCF4629B4C98E00D40AAB /* 18. 4Sum.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "18. 4Sum.swift"; sourceTree = "<group>"; };
		CE4BCF4729B4C98E00D40AAB /* 34. Find First and Last Position of Element in Sorted Array.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "34. Find First and Last Position of Element in Sorted Array.swift"; sourceTree = "<group>"; };
		CE4BCF4829B4C98E00D40AAB /* 65. Valid Number.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "65. Valid Number.swift"; sourceTree = "<group>"; };
		CE4BCF4929B4C98E00D40AAB /* 57. Insert Interval.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "57. Insert Interval.swift"; sourceTree = "<group>"; };
		CE4BCF4A29B4C98E00D40AAB /* 27. Remove Element.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "27. Remove Element.swift"; sourceTree = "<group>"; };
		CE4BCF4B29B4C98E00D40AAB /* 17. Letter Combinations of a Phone Number.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "17. Letter Combinations of a Phone Number.swift"; sourceTree = "<group>"; };
		CE4BCF4C29B4C98E00D40AAB /* 30. Substring with Concatenation of All Words.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "30. Substring with Concatenation of All Words.swift"; sourceTree = "<group>"; };
		CE4BCF4D29B4C98E00D40AAB /* 25. Reverse Nodes in k-Group.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "25. Reverse Nodes in k-Group.swift"; sourceTree = "<group>"; };
		CE4BCF4E29B4C98E00D40AAB /* 55. Jump Game.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "55. Jump Game.swift"; sourceTree = "<group>"; };
		CE4BCF4F29B4C98E00D40AAB /* 28. Find the Index of the First Occurrence in a String .swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "28. Find the Index of the First Occurrence in a String .swift"; sourceTree = "<group>"; };
		CE4BCF5029B4C98E00D40AAB /* 13. Roman to Integer.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "13. Roman to Integer.swift"; sourceTree = "<group>"; };
		CE4BCF5129B4C98E00D40AAB /* 60. Permutation Sequence.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "60. Permutation Sequence.swift"; sourceTree = "<group>"; };
		CE4BCF5229B4C98E00D40AAB /* 59. Spiral Matrix II.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "59. Spiral Matrix II.swift"; sourceTree = "<group>"; };
		CE4BCF5329B4C98E00D40AAB /* 11. Container With Most Water.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "11. Container With Most Water.swift"; sourceTree = "<group>"; };
		CE4BCF5429B4C98E00D40AAB /* 36. Valid Sudoku.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "36. Valid Sudoku.swift"; sourceTree = "<group>"; };
		CE4BCF5529B4C98E00D40AAB /* 21. Merge Two Sorted Lists.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "21. Merge Two Sorted Lists.swift"; sourceTree = "<group>"; };
		CE4BCF5629B4C98E00D40AAB /* 37. Sudoku Solver .swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "37. Sudoku Solver .swift"; sourceTree = "<group>"; };
		CE4BCF5729B4C98E00D40AAB /* 58. Length of Last Word.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "58. Length of Last Word.swift"; sourceTree = "<group>"; };
		CE4BCF5829B4C98E00D40AAB /* 54. Spiral Matrix.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "54. Spiral Matrix.swift"; sourceTree = "<group>"; };
		CE4BCF5929B4C98E00D40AAB /* 15. 3Sum.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "15. 3Sum.swift"; sourceTree = "<group>"; };
		CE4BCF5A29B4C98E00D40AAB /* 38. Count and Say.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "38. Count and Say.swift"; sourceTree = "<group>"; };
		CE4BCF5B29B4C98E00D40AAB /* 22. Generate Parentheses.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "22. Generate Parentheses.swift"; sourceTree = "<group>"; };
		CE4BCF5D29B4C98E00D40AAB /* 12. Integer to Roman.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "12. Integer to Roman.swift"; sourceTree = "<group>"; };
		CE4BCF5E29B4C98E00D40AAB /* 41. First Missing Positive.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "41. First Missing Positive.swift"; sourceTree = "<group>"; };
		CE4BCF5F29B4C98E00D40AAB /* 46. Permutations .swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "46. Permutations .swift"; sourceTree = "<group>"; };
		CE4BCF6029B4C98E00D40AAB /* 35. Search Insert Position.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "35. Search Insert Position.swift"; sourceTree = "<group>"; };
		CE4BCF6129B4C98E00D40AAB /* 20. Valid Parentheses.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "20. Valid Parentheses.swift"; sourceTree = "<group>"; };
		CE4BCF6229B4C98E00D40AAB /* 66. Plus One.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "66. Plus One.swift"; sourceTree = "<group>"; };
		CE4BCF6329B4C98E00D40AAB /* 29FAIL.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = 29FAIL.swift; sourceTree = "<group>"; };
		CE4BCF6429B4C98E00D40AAB /* 16. 3Sum Closeset.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "16. 3Sum Closeset.swift"; sourceTree = "<group>"; };
		CE4BCF6529B4C98E00D40AAB /* 49. Group Anagrams.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "49. Group Anagrams.swift"; sourceTree = "<group>"; };
		CE4BCF6629B4C98E00D40AAB /* 50. Pow(x, n) .swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "50. Pow(x, n) .swift"; sourceTree = "<group>"; };
		CE4BCFA029B4C9C800D40AAB /* main.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = main.swift; sourceTree = SOURCE_ROOT; };
		CE4C369A2A45467A00ECD28A /* 1208.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 1208.swift; sourceTree = "<group>"; };
		CE5FC3362A4088BD0019D702 /* 1766.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 1766.swift; sourceTree = "<group>"; };
		CE6125262A051E370091AE2A /* 7579.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 7579.swift; sourceTree = "<group>"; };
		CE6125282A0637660091AE2A /* 2342.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2342.swift; sourceTree = "<group>"; };
		CE662C672A494EF300DB1EF5 /* 1806.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 1806.swift; sourceTree = "<group>"; };
		CE6775C72A0E14AF00ABE0C5 /* 11049.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 11049.swift; sourceTree = "<group>"; };
		CE680F052A7265E000F29DC5 /* 118. Pascal's Triangle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "118. Pascal's Triangle.swift"; sourceTree = "<group>"; };
		CE680F072A75FD8000F29DC5 /* 119. Pascal's Triangle II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "119. Pascal's Triangle II.swift"; sourceTree = "<group>"; };
		CE680F092A7BEDB100F29DC5 /* 122. Best Time to Buy and Sell Stock II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "122. Best Time to Buy and Sell Stock II.swift"; sourceTree = "<group>"; };
		CE680F0B2A7D342600F29DC5 /* 123. Best Time to Buy and Sell Stock III.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "123. Best Time to Buy and Sell Stock III.swift"; sourceTree = "<group>"; };
		CE6C0E3C29D854E8009F0E7E /* 93. Restore IP Addresses.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "93. Restore IP Addresses.swift"; sourceTree = "<group>"; };
		CE6E6AC429B87584002ECE48 /* 69. Sqrt(x).swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "69. Sqrt(x).swift"; sourceTree = "<group>"; };
		CE6EA18D29C207DB00F8845F /* 77. Combinations.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "77. Combinations.swift"; sourceTree = "<group>"; };
		CE6F71C62A92EE2F002D3B61 /* 141. Linked List Cycle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "141. Linked List Cycle.swift"; sourceTree = "<group>"; };
		CE72066829D26ED700C7CB0A /* 90. Subsets II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "90. Subsets II.swift"; sourceTree = "<group>"; };
		CE72A0452A67BAC90071398A /* 2533.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2533.swift; sourceTree = "<group>"; };
		CE7395F629CAF07500113D67 /* 83. Remove Duplicates from Sorted List.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "83. Remove Duplicates from Sorted List.swift"; sourceTree = "<group>"; };
		CE74302429D572AC0073F8EB /* 91. Decode Ways.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "91. Decode Ways.swift"; sourceTree = "<group>"; };
		CE79E0E92A6A227400A3F68D /* 1019.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 1019.swift; sourceTree = "<group>"; };
		CE7E88EC2A5266AB0018431A /* 9328.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 9328.swift; sourceTree = "<group>"; };
		CE81EE7329E1107D00DC1EA6 /* 98. Validate Binary Search Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "98. Validate Binary Search Tree.swift"; sourceTree = "<group>"; };
		CE83D69D2A1AECEF00492517 /* 111. Minimum Depth of Binary Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "111. Minimum Depth of Binary Tree.swift"; sourceTree = "<group>"; };
		CE8B42502A44077D00744262 /* 2143.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2143.swift; sourceTree = "<group>"; };
		CE8D50C22A4179E00010E7B0 /* 9252.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 9252.swift; sourceTree = "<group>"; };
		CE9050162A23872200057B67 /* 116. Populating Next Right Pointers in Each Node.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "116. Populating Next Right Pointers in Each Node.swift"; sourceTree = "<group>"; };
		CE9099302A4707B700E0E19D /* 1562.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 1562.swift; sourceTree = "<group>"; };
		CE91EB3C29C584A600F1005A /* 79. Word Search.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "79. Word Search.swift"; sourceTree = "<group>"; };
		CE96333D2A55333C009D75C6 /* 2473.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2473.swift; sourceTree = "<group>"; };
		CE9D853D2A59C29000492BC4 /* 12100.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 12100.swift; sourceTree = "<group>"; };
		CE9D85402A5FAB8200492BC4 /* 16724.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 16724.swift; sourceTree = "<group>"; };
		CE9D858C2A60FB2700492BC4 /* 20303.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 20303.swift; sourceTree = "<group>"; };
		CE9D85A82A6288C800492BC4 /* 9527.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 9527.swift; sourceTree = "<group>"; };
		CEA1F8D92A07CDBB00B9EF96 /* 101. Symmetric Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "101. Symmetric Tree.swift"; sourceTree = "<group>"; };
		CEA44C4F2A18ED4B009A0C6D /* 109. Convert Sorted List to Binary Search Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "109. Convert Sorted List to Binary Search Tree.swift"; sourceTree = "<group>"; };
		CEAF83572A4BC145007C7862 /* 2166.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2166.swift; sourceTree = "<group>"; };
		CEB026A72A6E129B00AF659A /* 2357.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2357.swift; sourceTree = "<group>"; };
		CEB026C32A6F63CD00AF659A /* 14725.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 14725.swift; sourceTree = "<group>"; };
		CEB026C92A70DCC700AF659A /* 11505.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 11505.swift; sourceTree = "<group>"; };
		CEB50BEA2A1369F700490242 /* 106. Construct Binary Tree from Inorder and Postorder Traversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "106. Construct Binary Tree from Inorder and Postorder Traversal.swift"; sourceTree = "<group>"; };
		CEB50BEC2A14C6AC00490242 /* 107. Binary Tree Level Order Traversal II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "107. Binary Tree Level Order Traversal II.swift"; sourceTree = "<group>"; };
		CEBD9A9A2A64D7DF001CD12A /* 16946.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = 16946.swift; sourceTree = "<group>"; };
		CEC328512A4DA717000B3317 /* 2467.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2467.swift; sourceTree = "<group>"; };
		CEC328532A4E829F000B3317 /* 2239.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 2239.swift; sourceTree = "<group>"; };
		CEC45B0929C934AF00B0A05A /* 82. Remove Duplicates from Sorted List II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "82. Remove Duplicates from Sorted List II.swift"; sourceTree = "<group>"; };
		CEC4C1312A828B8100429E02 /* 128. Longest Consecutive Sequence.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "128. Longest Consecutive Sequence.swift"; sourceTree = "<group>"; };
		CEC869162A8CBA5600BB7FE4 /* 136. Single Number.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "136. Single Number.swift"; sourceTree = "<group>"; };
		CEC91B1D29CC113600993657 /* 84. Largest Rectangle in Histogram.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "84. Largest Rectangle in Histogram.swift"; sourceTree = "<group>"; };
		CEC91B2229CD644E00993657 /* 85. Maximal Rectangle.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "85. Maximal Rectangle.swift"; sourceTree = "<group>"; };
		CEC9D52A29C7E95300F1142A /* 81. Search in Rotated Sorted Array II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "81. Search in Rotated Sorted Array II.swift"; sourceTree = "<group>"; };
		CECDB8D129C0072C008FDAA8 /* 75. Sort Colors.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "75. Sort Colors.swift"; sourceTree = "<group>"; };
		CECDB8EA29C2A7BD008FDAA8 /* 76. Minimum Window Substring.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "76. Minimum Window Substring.swift"; sourceTree = "<group>"; };
		CED04C072A11C0B400A3DB77 /* 1644.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 1644.swift; sourceTree = "<group>"; };
		CED0FFCE2A7A237A00D973BA /* 1708.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 1708.swift; sourceTree = "<group>"; };
		CED196B22A00912B00EED431 /* 99. Recover Binary Search Tree.swift */ = {isa = PBXFileReference; fileEncoding = 4; lastKnownFileType = sourcecode.swift; path = "99. Recover Binary Search Tree.swift"; sourceTree = "<group>"; };
		CED1C42A29C4232300539801 /* 78. Subsets.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "78. Subsets.swift"; sourceTree = "<group>"; };
		CED292AC29D8FC9200C90AD3 /* 94. Binary Tree Inorder Traversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "94. Binary Tree Inorder Traversal.swift"; sourceTree = "<group>"; };
		CED3E7832A57091600D0B772 /* 9466.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 9466.swift; sourceTree = "<group>"; };
		CED3E7852A57B77500D0B772 /* 12015.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 12015.swift; sourceTree = "<group>"; };
		CED6127029BDC48B006E2EE1 /* 73. Set Matrix Zeroes.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "73. Set Matrix Zeroes.swift"; sourceTree = "<group>"; };
		CED612C829BF544A006E2EE1 /* 74. Search a 2D Matrix.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "74. Search a 2D Matrix.swift"; sourceTree = "<group>"; };
		CED676112A53AF5D0040531F /* 10942.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = 10942.swift; sourceTree = "<group>"; };
		CED8EE4A2A0C6CAE0007AD4D /* 103. Binary Tree Zigzag Level Order Traversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "103. Binary Tree Zigzag Level Order Traversal.swift"; sourceTree = "<group>"; };
		CEE019CA2A9474B9003B733B /* 142. Linked List Cycle II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "142. Linked List Cycle II.swift"; sourceTree = "<group>"; };
		CEE019CC2A95F469003B733B /* 143. Reorder List.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "143. Reorder List.swift"; sourceTree = "<group>"; };
		CEE019CE2A978EDD003B733B /* 144. Binary Tree Preorder Traversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "144. Binary Tree Preorder Traversal.swift"; sourceTree = "<group>"; };
		CEE019D02A98EA92003B733B /* 145. Binary Tree Postorder Traversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "145. Binary Tree Postorder Traversal.swift"; sourceTree = "<group>"; };
		CEE035CF29CE97C3006444EF /* 86. Partition List.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "86. Partition List.swift"; sourceTree = "<group>"; };
		CEE1F60B2A09CFAA00C1A7DA /* 102. Binary Tree Level Order Traversal.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "102. Binary Tree Level Order Traversal.swift"; sourceTree = "<group>"; };
		CEE330132A19FEDF00C8CEE0 /* 110. Balanced Binary Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "110. Balanced Binary Tree.swift"; sourceTree = "<group>"; };
		CEE7E78429D660410011FEE3 /* 92. Reverse Linked List II.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "92. Reverse Linked List II.swift"; sourceTree = "<group>"; };
		CEEC282B2A0250FE00CFE4DA /* 100. Same Tree.swift */ = {isa = PBXFileReference; lastKnownFileType = sourcecode.swift; path = "100. Same Tree.swift"; sourceTree = "<group>"; };
/* End PBXFileReference section */

/* Begin PBXFrameworksBuildPhase section */
		CE3A6186296557E30012280D /* Frameworks */ = {
			isa = PBXFrameworksBuildPhase;
			buildActionMask = 2147483647;
			files = (
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXFrameworksBuildPhase section */

/* Begin PBXGroup section */
		CE3A6180296557E30012280D = {
			isa = PBXGroup;
			children = (
				CE38E67C2A9CD09A003215E4 /* 147. Insertion Sort List.swift */,
				CE4BCFA029B4C9C800D40AAB /* main.swift */,
				CE4BCF2C29B4C98E00D40AAB /* Baekjoon */,
				CE4BCF3029B4C98E00D40AAB /* LeetCode */,
				CE3A618A296557E30012280D /* Products */,
			);
			sourceTree = "<group>";
		};
		CE3A618A296557E30012280D /* Products */ = {
			isa = PBXGroup;
			children = (
				CE3A6189296557E30012280D /* Algorithm_Swift */,
			);
			name = Products;
			sourceTree = "<group>";
		};
		CE4BCF2C29B4C98E00D40AAB /* Baekjoon */ = {
			isa = PBXGroup;
			children = (
				CED0FFCE2A7A237A00D973BA /* 1708.swift */,
				CEB026C92A70DCC700AF659A /* 11505.swift */,
				CEB026C32A6F63CD00AF659A /* 14725.swift */,
				CEB026A72A6E129B00AF659A /* 2357.swift */,
				CE2AE7A52A6D3C07003E7FAF /* 2042.swift */,
				CE79E0E92A6A227400A3F68D /* 1019.swift */,
				CE3D5CBB2A69189100DCBA13 /* 13334.swift */,
				CE72A0452A67BAC90071398A /* 2533.swift */,
				CE0F601D2A665F8F0085D110 /* 17387.swift */,
				CEBD9A9A2A64D7DF001CD12A /* 16946.swift */,
				CE9D85A82A6288C800492BC4 /* 9527.swift */,
				CE9D858C2A60FB2700492BC4 /* 20303.swift */,
				CE9D85402A5FAB8200492BC4 /* 16724.swift */,
				CE042C272A5E765B007A13A2 /* 17404.swift */,
				CE19AC5B2A5CF2FA00B84020 /* 27172.swift */,
				CE19AC272A5BD6A000B84020 /* 13460.swift */,
				CE9D853D2A59C29000492BC4 /* 12100.swift */,
				CED3E7852A57B77500D0B772 /* 12015.swift */,
				CED3E7832A57091600D0B772 /* 9466.swift */,
				CE96333D2A55333C009D75C6 /* 2473.swift */,
				CED676112A53AF5D0040531F /* 10942.swift */,
				CE7E88EC2A5266AB0018431A /* 9328.swift */,
				CE24A6462A519F53000285B9 /* 2623.swift */,
				CE24A6442A502DED000285B9 /* 2252.swift */,
				CEC328532A4E829F000B3317 /* 2239.swift */,
				CEC328512A4DA717000B3317 /* 2467.swift */,
				CEAF83572A4BC145007C7862 /* 2166.swift */,
				CE662C672A494EF300DB1EF5 /* 1806.swift */,
				CE9099302A4707B700E0E19D /* 1562.swift */,
				CE4C369A2A45467A00ECD28A /* 1208.swift */,
				CE8B42502A44077D00744262 /* 2143.swift */,
				CE8D50C22A4179E00010E7B0 /* 9252.swift */,
				CE5FC3362A4088BD0019D702 /* 1766.swift */,
				CED04C072A11C0B400A3DB77 /* 1644.swift */,
				CE6775C72A0E14AF00ABE0C5 /* 11049.swift */,
				CE31A41D2A0883E10058A811 /* 2098.swift */,
				CE6125282A0637660091AE2A /* 2342.swift */,
				CE6125262A051E370091AE2A /* 7579.swift */,
				CE4BCF2D29B4C98E00D40AAB /* 12851.swift */,
				CE4BCF2E29B4C98E00D40AAB /* 1138.swift */,
				CE4BCF2F29B4C98E00D40AAB /* 1063.swift */,
			);
			path = Baekjoon;
			sourceTree = "<group>";
		};
		CE4BCF3029B4C98E00D40AAB /* LeetCode */ = {
			isa = PBXGroup;
			children = (
				CE38E67A2A99F9C8003215E4 /* 146. LRU Cache.swift */,
				CEE019D02A98EA92003B733B /* 145. Binary Tree Postorder Traversal.swift */,
				CEE019CE2A978EDD003B733B /* 144. Binary Tree Preorder Traversal.swift */,
				CEE019CC2A95F469003B733B /* 143. Reorder List.swift */,
				CEE019CA2A9474B9003B733B /* 142. Linked List Cycle II.swift */,
				CE6F71C62A92EE2F002D3B61 /* 141. Linked List Cycle.swift */,
				CE089BF72A91FCF600CE710E /* 139. Word Break.swift */,
				CE089BF52A90FD9B00CE710E /* 138. Copy List with Random Pointer.swift */,
				CE089BF32A8DABBA00CE710E /* 137. Single Number II.swift */,
				CEC869162A8CBA5600BB7FE4 /* 136. Single Number.swift */,
				CE089BF12A8BAA8600CE710E /* 134. Gas Station.swift */,
				CE089BEF2A8A1B9D00CE710E /* 133. Clone Graph.swift */,
				CE089BED2A87B59B00CE710E /* 132. Palindrome Partitioning II.swift */,
				CE089BEB2A866D3800CE710E /* 131. Palindrome Partitioning.swift */,
				CE089BE92A8481F400CE710E /* 130. Surrounded Regions.swift */,
				CE089BE72A83AFF300CE710E /* 129. Sum Root to Leaf Numbers.swift */,
				CEC4C1312A828B8100429E02 /* 128. Longest Consecutive Sequence.swift */,
				CE247EE42A8107120002660A /* 125. Valid Palindrome.swift */,
				CE247EE22A7FC3670002660A /* 124. Binary Tree Maximum Path Sum.swift */,
				CE680F0B2A7D342600F29DC5 /* 123. Best Time to Buy and Sell Stock III.swift */,
				CE680F092A7BEDB100F29DC5 /* 122. Best Time to Buy and Sell Stock II.swift */,
				CE41D9E32A788B2D0061D4D2 /* 121. Best Time to Buy and Sell Stock.swift */,
				CE41D9DF2A773D1F0061D4D2 /* 120. Triangle.swift */,
				CE680F072A75FD8000F29DC5 /* 119. Pascal's Triangle II.swift */,
				CE680F052A7265E000F29DC5 /* 118. Pascal's Triangle.swift */,
				CE18B12E2A4319A7009E23D5 /* 117. Populating Next Right Pointers in Each Node II.swift */,
				CE9050162A23872200057B67 /* 116. Populating Next Right Pointers in Each Node.swift */,
				CE3483C02A204A49008AABC7 /* 115. Distinct Subsequences.swift */,
				CE3483BE2A1EE23A008AABC7 /* 114. Flatten Binary Tree to Linked List.swift */,
				CE39DDDF2A1DFE3E0005D489 /* 113. Path Sum II.swift */,
				CE39DDB12A1C757B0005D489 /* 112. Path Sum.swift */,
				CE83D69D2A1AECEF00492517 /* 111. Minimum Depth of Binary Tree.swift */,
				CEE330132A19FEDF00C8CEE0 /* 110. Balanced Binary Tree.swift */,
				CEA44C4F2A18ED4B009A0C6D /* 109. Convert Sorted List to Binary Search Tree.swift */,
				CE33ECAD2A16F7C900E2277E /* 108. Convert Sorted Array to Binary Search Tree.swift */,
				CEB50BEC2A14C6AC00490242 /* 107. Binary Tree Level Order Traversal II.swift */,
				CEB50BEA2A1369F700490242 /* 106. Construct Binary Tree from Inorder and Postorder Traversal.swift */,
				CE12D1C32A110FE900801C5A /* 105. Construct Binary Tree from Preorder and Inorder Traversal.swift */,
				CE12D1C12A0F557F00801C5A /* 104. Maximum Depth of Binary Tree.swift */,
				CED8EE4A2A0C6CAE0007AD4D /* 103. Binary Tree Zigzag Level Order Traversal.swift */,
				CEE1F60B2A09CFAA00C1A7DA /* 102. Binary Tree Level Order Traversal.swift */,
				CEA1F8D92A07CDBB00B9EF96 /* 101. Symmetric Tree.swift */,
				CEEC282B2A0250FE00CFE4DA /* 100. Same Tree.swift */,
				CED196B22A00912B00EED431 /* 99. Recover Binary Search Tree.swift */,
				CE81EE7329E1107D00DC1EA6 /* 98. Validate Binary Search Tree.swift */,
				CE04849229DFE619007138A2 /* 97. Interleaving String.swift */,
				CE34E02529DE4A5E002C9B72 /* 96. Unique Binary Search Trees.swift */,
				CE09DE2F29DD7A2800FDAEC9 /* 95. Unique Binary Search Trees II.swift */,
				CED292AC29D8FC9200C90AD3 /* 94. Binary Tree Inorder Traversal.swift */,
				CE6C0E3C29D854E8009F0E7E /* 93. Restore IP Addresses.swift */,
				CEE7E78429D660410011FEE3 /* 92. Reverse Linked List II.swift */,
				CE74302429D572AC0073F8EB /* 91. Decode Ways.swift */,
				CE72066829D26ED700C7CB0A /* 90. Subsets II.swift */,
				CE2BA4BF29D12CBC006614A0 /* 89. Gray Code.swift */,
				CE3352DA29D0853800CC645D /* 88. Merge Sorted Array.swift */,
				CEE035CF29CE97C3006444EF /* 86. Partition List.swift */,
				CEC91B2229CD644E00993657 /* 85. Maximal Rectangle.swift */,
				CEC91B1D29CC113600993657 /* 84. Largest Rectangle in Histogram.swift */,
				CE7395F629CAF07500113D67 /* 83. Remove Duplicates from Sorted List.swift */,
				CEC45B0929C934AF00B0A05A /* 82. Remove Duplicates from Sorted List II.swift */,
				CEC9D52A29C7E95300F1142A /* 81. Search in Rotated Sorted Array II.swift */,
				CE1462F629C6F49000DF279D /* 80. Remove Duplicates from Sorted Array II.swift */,
				CE91EB3C29C584A600F1005A /* 79. Word Search.swift */,
				CED1C42A29C4232300539801 /* 78. Subsets.swift */,
				CE6EA18D29C207DB00F8845F /* 77. Combinations.swift */,
				CECDB8EA29C2A7BD008FDAA8 /* 76. Minimum Window Substring.swift */,
				CECDB8D129C0072C008FDAA8 /* 75. Sort Colors.swift */,
				CED612C829BF544A006E2EE1 /* 74. Search a 2D Matrix.swift */,
				CED6127029BDC48B006E2EE1 /* 73. Set Matrix Zeroes.swift */,
				CE4B855E29BCB12700BBFC26 /* 72. Edit Distance.swift */,
				CE28710429BAFB1D0036D922 /* 71. Simplify Path.swift */,
				CE28710229B9A5D60036D922 /* 70. Climbing Stairs.swift */,
				CE6E6AC429B87584002ECE48 /* 69. Sqrt(x).swift */,
				CE4B855C29B7598200BBFC26 /* 68. Text Justification.swift */,
				CE4BCF5329B4C98E00D40AAB /* 11. Container With Most Water.swift */,
				CE4BCF5D29B4C98E00D40AAB /* 12. Integer to Roman.swift */,
				CE4BCF5029B4C98E00D40AAB /* 13. Roman to Integer.swift */,
				CE4BCF3629B4C98E00D40AAB /* 14. Longest Common Prefix.swift */,
				CE4BCF5929B4C98E00D40AAB /* 15. 3Sum.swift */,
				CE4BCF6429B4C98E00D40AAB /* 16. 3Sum Closeset.swift */,
				CE4BCF4B29B4C98E00D40AAB /* 17. Letter Combinations of a Phone Number.swift */,
				CE4BCF4629B4C98E00D40AAB /* 18. 4Sum.swift */,
				CE4BCF4029B4C98E00D40AAB /* 19. Remove Nth Node From End of List.swift */,
				CE4BCF6129B4C98E00D40AAB /* 20. Valid Parentheses.swift */,
				CE4BCF5529B4C98E00D40AAB /* 21. Merge Two Sorted Lists.swift */,
				CE4BCF5B29B4C98E00D40AAB /* 22. Generate Parentheses.swift */,
				CE4BCF3D29B4C98E00D40AAB /* 23. Merge k Sorted Lists.swift */,
				CE4BCF4229B4C98E00D40AAB /* 24. Swap Nodes in Pairs.swift */,
				CE4BCF4D29B4C98E00D40AAB /* 25. Reverse Nodes in k-Group.swift */,
				CE4BCF4529B4C98E00D40AAB /* 26. Remove Duplicates from Sorted Array.swift */,
				CE4BCF4A29B4C98E00D40AAB /* 27. Remove Element.swift */,
				CE4BCF4F29B4C98E00D40AAB /* 28. Find the Index of the First Occurrence in a String .swift */,
				CE4BCF6329B4C98E00D40AAB /* 29FAIL.swift */,
				CE4BCF4C29B4C98E00D40AAB /* 30. Substring with Concatenation of All Words.swift */,
				CE4BCF3429B4C98E00D40AAB /* 31. Next Permutation.swift */,
				CE4BCF4729B4C98E00D40AAB /* 34. Find First and Last Position of Element in Sorted Array.swift */,
				CE4BCF6029B4C98E00D40AAB /* 35. Search Insert Position.swift */,
				CE4BCF5429B4C98E00D40AAB /* 36. Valid Sudoku.swift */,
				CE4BCF5629B4C98E00D40AAB /* 37. Sudoku Solver .swift */,
				CE4BCF5A29B4C98E00D40AAB /* 38. Count and Say.swift */,
				CE4BCF3C29B4C98E00D40AAB /* 39. Combination Sum.swift */,
				CE4BCF3B29B4C98E00D40AAB /* 40. Combination Sum II.swift */,
				CE4BCF5E29B4C98E00D40AAB /* 41. First Missing Positive.swift */,
				CE4BCF3A29B4C98E00D40AAB /* 42. Trapping Rain Water .swift */,
				CE4BCF3229B4C98E00D40AAB /* 43. Multiply Strings .swift */,
				CE4BCF3729B4C98E00D40AAB /* 44. Wildcard Matching.swift */,
				CE4BCF4429B4C98E00D40AAB /* 45. Jump Game II .swift */,
				CE4BCF5F29B4C98E00D40AAB /* 46. Permutations .swift */,
				CE4BCF3929B4C98E00D40AAB /* 47. Permutations II.swift */,
				CE4BCF3529B4C98E00D40AAB /* 48. Rotate Image .swift */,
				CE4BCF6529B4C98E00D40AAB /* 49. Group Anagrams.swift */,
				CE4BCF6629B4C98E00D40AAB /* 50. Pow(x, n) .swift */,
				CE4BCF3E29B4C98E00D40AAB /* 53. Maximum Subarray.swift */,
				CE4BCF5829B4C98E00D40AAB /* 54. Spiral Matrix.swift */,
				CE4BCF4E29B4C98E00D40AAB /* 55. Jump Game.swift */,
				CE4BCF4129B4C98E00D40AAB /* 56. Merge Intervals.swift */,
				CE4BCF4929B4C98E00D40AAB /* 57. Insert Interval.swift */,
				CE4BCF5729B4C98E00D40AAB /* 58. Length of Last Word.swift */,
				CE4BCF5229B4C98E00D40AAB /* 59. Spiral Matrix II.swift */,
				CE4BCF5129B4C98E00D40AAB /* 60. Permutation Sequence.swift */,
				CE4BCF4329B4C98E00D40AAB /* 61. Rotate List.swift */,
				CE4BCF3129B4C98E00D40AAB /* 62. Unique Paths.swift */,
				CE4BCF3329B4C98E00D40AAB /* 63. Unique Paths II.swift */,
				CE4BCF3829B4C98E00D40AAB /* 64. Minimum Path Sum.swift */,
				CE4BCF4829B4C98E00D40AAB /* 65. Valid Number.swift */,
				CE4BCF6229B4C98E00D40AAB /* 66. Plus One.swift */,
				CE4BCF3F29B4C98E00D40AAB /* enum에 관한 고찰.swift */,
				CE4B855A29B5754D00BBFC26 /* 67. Add Binary.swift */,
			);
			path = LeetCode;
			sourceTree = "<group>";
		};
/* End PBXGroup section */

/* Begin PBXNativeTarget section */
		CE3A6188296557E30012280D /* Algorithm_Swift */ = {
			isa = PBXNativeTarget;
			buildConfigurationList = CE3A6190296557E30012280D /* Build configuration list for PBXNativeTarget "Algorithm_Swift" */;
			buildPhases = (
				CE3A6185296557E30012280D /* Sources */,
				CE3A6186296557E30012280D /* Frameworks */,
				CE3A6187296557E30012280D /* CopyFiles */,
			);
			buildRules = (
			);
			dependencies = (
			);
			name = Algorithm_Swift;
			productName = Algorithm_Swift;
			productReference = CE3A6189296557E30012280D /* Algorithm_Swift */;
			productType = "com.apple.product-type.tool";
		};
/* End PBXNativeTarget section */

/* Begin PBXProject section */
		CE3A6181296557E30012280D /* Project object */ = {
			isa = PBXProject;
			attributes = {
				BuildIndependentTargetsInParallel = 1;
				LastSwiftUpdateCheck = 1400;
				LastUpgradeCheck = 1420;
				TargetAttributes = {
					CE3A6188296557E30012280D = {
						CreatedOnToolsVersion = 14.0.1;
					};
				};
			};
			buildConfigurationList = CE3A6184296557E30012280D /* Build configuration list for PBXProject "Swift" */;
			compatibilityVersion = "Xcode 14.0";
			developmentRegion = en;
			hasScannedForEncodings = 0;
			knownRegions = (
				en,
				Base,
			);
			mainGroup = CE3A6180296557E30012280D;
			productRefGroup = CE3A618A296557E30012280D /* Products */;
			projectDirPath = "";
			projectRoot = "";
			targets = (
				CE3A6188296557E30012280D /* Algorithm_Swift */,
			);
		};
/* End PBXProject section */

/* Begin PBXSourcesBuildPhase section */
		CE3A6185296557E30012280D /* Sources */ = {
			isa = PBXSourcesBuildPhase;
			buildActionMask = 2147483647;
			files = (
				CE4BCF6829B4C98E00D40AAB /* 1138.swift in Sources */,
				CE4BCF6929B4C98E00D40AAB /* 1063.swift in Sources */,
				CEB026CA2A70DCC700AF659A /* 11505.swift in Sources */,
				CE247EE52A8107120002660A /* 125. Valid Palindrome.swift in Sources */,
				CE4BCF8A29B4C98E00D40AAB /* 60. Permutation Sequence.swift in Sources */,
				CE4BCF7C29B4C98E00D40AAB /* 61. Rotate List.swift in Sources */,
				CE4BCF9629B4C98E00D40AAB /* 12. Integer to Roman.swift in Sources */,
				CE4BCF8F29B4C98E00D40AAB /* 37. Sudoku Solver .swift in Sources */,
				CE8D50C32A4179E00010E7B0 /* 9252.swift in Sources */,
				CE4BCF9229B4C98E00D40AAB /* 15. 3Sum.swift in Sources */,
				CED6127129BDC48B006E2EE1 /* 73. Set Matrix Zeroes.swift in Sources */,
				CE4BCF7229B4C98E00D40AAB /* 47. Permutations II.swift in Sources */,
				CEE035D029CE97C3006444EF /* 86. Partition List.swift in Sources */,
				CE2BA4C029D12CBC006614A0 /* 89. Gray Code.swift in Sources */,
				CED3E7842A57091600D0B772 /* 9466.swift in Sources */,
				CE9099312A4707B700E0E19D /* 1562.swift in Sources */,
				CE4B855D29B7598200BBFC26 /* 68. Text Justification.swift in Sources */,
				CE39DDE02A1DFE3E0005D489 /* 113. Path Sum II.swift in Sources */,
				CE7E88ED2A5266AB0018431A /* 9328.swift in Sources */,
				CE41D9E02A773D1F0061D4D2 /* 120. Triangle.swift in Sources */,
				CE4BCF9C29B4C98E00D40AAB /* 29FAIL.swift in Sources */,
				CE34E02629DE4A5E002C9B72 /* 96. Unique Binary Search Trees.swift in Sources */,
				CED292AD29D8FC9200C90AD3 /* 94. Binary Tree Inorder Traversal.swift in Sources */,
				CE089BEC2A866D3800CE710E /* 131. Palindrome Partitioning.swift in Sources */,
				CE4BCF9B29B4C98E00D40AAB /* 66. Plus One.swift in Sources */,
				CE9D85412A5FAB8200492BC4 /* 16724.swift in Sources */,
				CE72A0462A67BAC90071398A /* 2533.swift in Sources */,
				CE4BCF8729B4C98E00D40AAB /* 55. Jump Game.swift in Sources */,
				CE4BCF8129B4C98E00D40AAB /* 65. Valid Number.swift in Sources */,
				CE4BCF8C29B4C98E00D40AAB /* 11. Container With Most Water.swift in Sources */,
				CED612C929BF544A006E2EE1 /* 74. Search a 2D Matrix.swift in Sources */,
				CE9D853E2A59C29000492BC4 /* 12100.swift in Sources */,
				CE4BCF7429B4C98E00D40AAB /* 40. Combination Sum II.swift in Sources */,
				CE4BCF7329B4C98E00D40AAB /* 42. Trapping Rain Water .swift in Sources */,
				CE31A41E2A0883E10058A811 /* 2098.swift in Sources */,
				CE6F71C72A92EE2F002D3B61 /* 141. Linked List Cycle.swift in Sources */,
				CEC45B0A29C934AF00B0A05A /* 82. Remove Duplicates from Sorted List II.swift in Sources */,
				CE19AC282A5BD6A000B84020 /* 13460.swift in Sources */,
				CE6125272A051E370091AE2A /* 7579.swift in Sources */,
				CE4BCF9D29B4C98E00D40AAB /* 16. 3Sum Closeset.swift in Sources */,
				CEC91B1E29CC113600993657 /* 84. Largest Rectangle in Histogram.swift in Sources */,
				CE4BCF9429B4C98E00D40AAB /* 22. Generate Parentheses.swift in Sources */,
				CE6EA18E29C207DB00F8845F /* 77. Combinations.swift in Sources */,
				CE38E67B2A99F9C8003215E4 /* 146. LRU Cache.swift in Sources */,
				CE662C682A494EF300DB1EF5 /* 1806.swift in Sources */,
				CE38E67D2A9CD09A003215E4 /* 147. Insertion Sort List.swift in Sources */,
				CEC869172A8CBA5600BB7FE4 /* 136. Single Number.swift in Sources */,
				CE3483C12A204A49008AABC7 /* 115. Distinct Subsequences.swift in Sources */,
				CEE019CB2A9474B9003B733B /* 142. Linked List Cycle II.swift in Sources */,
				CE24A6452A502DED000285B9 /* 2252.swift in Sources */,
				CE089BF42A8DABBA00CE710E /* 137. Single Number II.swift in Sources */,
				CE4BCF7A29B4C98E00D40AAB /* 56. Merge Intervals.swift in Sources */,
				CE74302529D572AC0073F8EB /* 91. Decode Ways.swift in Sources */,
				CE4BCF9A29B4C98E00D40AAB /* 20. Valid Parentheses.swift in Sources */,
				CE4BCF6D29B4C98E00D40AAB /* 31. Next Permutation.swift in Sources */,
				CE33ECAE2A16F7C900E2277E /* 108. Convert Sorted Array to Binary Search Tree.swift in Sources */,
				CE7395F729CAF07500113D67 /* 83. Remove Duplicates from Sorted List.swift in Sources */,
				CE4BCF8829B4C98E00D40AAB /* 28. Find the Index of the First Occurrence in a String .swift in Sources */,
				CE089BF22A8BAA8600CE710E /* 134. Gas Station.swift in Sources */,
				CE4BCF7929B4C98E00D40AAB /* 19. Remove Nth Node From End of List.swift in Sources */,
				CE9D85A92A6288C800492BC4 /* 9527.swift in Sources */,
				CEEC282C2A0250FE00CFE4DA /* 100. Same Tree.swift in Sources */,
				CE4BCF9F29B4C98E00D40AAB /* 50. Pow(x, n) .swift in Sources */,
				CE79E0EA2A6A227400A3F68D /* 1019.swift in Sources */,
				CE089BF82A91FCF600CE710E /* 139. Word Break.swift in Sources */,
				CEE019CF2A978EDD003B733B /* 144. Binary Tree Preorder Traversal.swift in Sources */,
				CED0FFCF2A7A237A00D973BA /* 1708.swift in Sources */,
				CE4BCF7829B4C98E00D40AAB /* enum에 관한 고찰.swift in Sources */,
				CE39DDB22A1C757B0005D489 /* 112. Path Sum.swift in Sources */,
				CE91EB3D29C584A600F1005A /* 79. Word Search.swift in Sources */,
				CEE019D12A98EA92003B733B /* 145. Binary Tree Postorder Traversal.swift in Sources */,
				CE2AE7A62A6D3C07003E7FAF /* 2042.swift in Sources */,
				CE4B855B29B5754D00BBFC26 /* 67. Add Binary.swift in Sources */,
				CE4BCF7F29B4C98E00D40AAB /* 18. 4Sum.swift in Sources */,
				CEA44C502A18ED4B009A0C6D /* 109. Convert Sorted List to Binary Search Tree.swift in Sources */,
				CE83D69E2A1AECEF00492517 /* 111. Minimum Depth of Binary Tree.swift in Sources */,
				CE4BCF8D29B4C98E00D40AAB /* 36. Valid Sudoku.swift in Sources */,
				CE4BCF8529B4C98E00D40AAB /* 30. Substring with Concatenation of All Words.swift in Sources */,
				CEA1F8DA2A07CDBB00B9EF96 /* 101. Symmetric Tree.swift in Sources */,
				CE4BCF9929B4C98E00D40AAB /* 35. Search Insert Position.swift in Sources */,
				CE6125292A0637660091AE2A /* 2342.swift in Sources */,
				CEB026A82A6E129B00AF659A /* 2357.swift in Sources */,
				CE4BCF8229B4C98E00D40AAB /* 57. Insert Interval.swift in Sources */,
				CEC4C1322A828B8100429E02 /* 128. Longest Consecutive Sequence.swift in Sources */,
				CE6C0E3D29D854E8009F0E7E /* 93. Restore IP Addresses.swift in Sources */,
				CE4B855F29BCB12700BBFC26 /* 72. Edit Distance.swift in Sources */,
				CE4BCF9E29B4C98E00D40AAB /* 49. Group Anagrams.swift in Sources */,
				CE4BCF7529B4C98E00D40AAB /* 39. Combination Sum.swift in Sources */,
				CE042C282A5E765B007A13A2 /* 17404.swift in Sources */,
				CE247EE32A7FC3670002660A /* 124. Binary Tree Maximum Path Sum.swift in Sources */,
				CE12D1C42A110FE900801C5A /* 105. Construct Binary Tree from Preorder and Inorder Traversal.swift in Sources */,
				CE12D1C22A0F557F00801C5A /* 104. Maximum Depth of Binary Tree.swift in Sources */,
				CE8B42512A44077D00744262 /* 2143.swift in Sources */,
				CE1462F729C6F49000DF279D /* 80. Remove Duplicates from Sorted Array II.swift in Sources */,
				CE28710329B9A5D60036D922 /* 70. Climbing Stairs.swift in Sources */,
				CEE7E78529D660410011FEE3 /* 92. Reverse Linked List II.swift in Sources */,
				CE4BCF8629B4C98E00D40AAB /* 25. Reverse Nodes in k-Group.swift in Sources */,
				CE3D5CBC2A69189100DCBA13 /* 13334.swift in Sources */,
				CE04849329DFE619007138A2 /* 97. Interleaving String.swift in Sources */,
				CE81EE7429E1107D00DC1EA6 /* 98. Validate Binary Search Tree.swift in Sources */,
				CE3352DB29D0853800CC645D /* 88. Merge Sorted Array.swift in Sources */,
				CED676122A53AF5D0040531F /* 10942.swift in Sources */,
				CE4BCF7629B4C98E00D40AAB /* 23. Merge k Sorted Lists.swift in Sources */,
				CE18B12F2A4319A7009E23D5 /* 117. Populating Next Right Pointers in Each Node II.swift in Sources */,
				CE4BCF9129B4C98E00D40AAB /* 54. Spiral Matrix.swift in Sources */,
				CE089BF02A8A1B9D00CE710E /* 133. Clone Graph.swift in Sources */,
				CE9D858D2A60FB2700492BC4 /* 20303.swift in Sources */,
				CE72066929D26ED700C7CB0A /* 90. Subsets II.swift in Sources */,
				CE680F082A75FD8000F29DC5 /* 119. Pascal's Triangle II.swift in Sources */,
				CEAF83582A4BC145007C7862 /* 2166.swift in Sources */,
				CE6E6AC529B87584002ECE48 /* 69. Sqrt(x).swift in Sources */,
				CE4BCF7D29B4C98E00D40AAB /* 45. Jump Game II .swift in Sources */,
				CE4BCF6C29B4C98E00D40AAB /* 63. Unique Paths II.swift in Sources */,
				CE680F0A2A7BEDB100F29DC5 /* 122. Best Time to Buy and Sell Stock II.swift in Sources */,
				CE5FC3372A4088BD0019D702 /* 1766.swift in Sources */,
				CE4BCF7E29B4C98E00D40AAB /* 26. Remove Duplicates from Sorted Array.swift in Sources */,
				CE3483BF2A1EE23A008AABC7 /* 114. Flatten Binary Tree to Linked List.swift in Sources */,
				CEE330142A19FEDF00C8CEE0 /* 110. Balanced Binary Tree.swift in Sources */,
				CE4BCF6A29B4C98E00D40AAB /* 62. Unique Paths.swift in Sources */,
				CE4BCF8B29B4C98E00D40AAB /* 59. Spiral Matrix II.swift in Sources */,
				CE4BCF6F29B4C98E00D40AAB /* 14. Longest Common Prefix.swift in Sources */,
				CE24A6472A519F53000285B9 /* 2623.swift in Sources */,
				CE4BCF8E29B4C98E00D40AAB /* 21. Merge Two Sorted Lists.swift in Sources */,
				CEE019CD2A95F469003B733B /* 143. Reorder List.swift in Sources */,
				CE41D9E42A788B2D0061D4D2 /* 121. Best Time to Buy and Sell Stock.swift in Sources */,
				CECDB8EB29C2A7BD008FDAA8 /* 76. Minimum Window Substring.swift in Sources */,
				CED1C42B29C4232300539801 /* 78. Subsets.swift in Sources */,
				CE4BCF8029B4C98E00D40AAB /* 34. Find First and Last Position of Element in Sorted Array.swift in Sources */,
				CED3E7862A57B77500D0B772 /* 12015.swift in Sources */,
				CE19AC5C2A5CF2FA00B84020 /* 27172.swift in Sources */,
				CE680F062A7265E000F29DC5 /* 118. Pascal's Triangle.swift in Sources */,
				CEB50BEB2A1369F700490242 /* 106. Construct Binary Tree from Inorder and Postorder Traversal.swift in Sources */,
				CE0F601E2A665F8F0085D110 /* 17387.swift in Sources */,
				CE4BCF9729B4C98E00D40AAB /* 41. First Missing Positive.swift in Sources */,
				CE4BCF8429B4C98E00D40AAB /* 17. Letter Combinations of a Phone Number.swift in Sources */,
				CE680F0C2A7D342600F29DC5 /* 123. Best Time to Buy and Sell Stock III.swift in Sources */,
				CEC91B2329CD644E00993657 /* 85. Maximal Rectangle.swift in Sources */,
				CE4BCF6729B4C98E00D40AAB /* 12851.swift in Sources */,
				CE4C369B2A45467A00ECD28A /* 1208.swift in Sources */,
				CE4BCF6E29B4C98E00D40AAB /* 48. Rotate Image .swift in Sources */,
				CE96333E2A55333C009D75C6 /* 2473.swift in Sources */,
				CE4BCF6B29B4C98E00D40AAB /* 43. Multiply Strings .swift in Sources */,
				CED196B32A00912B00EED431 /* 99. Recover Binary Search Tree.swift in Sources */,
				CE09DE3029DD7A2800FDAEC9 /* 95. Unique Binary Search Trees II.swift in Sources */,
				CE9050172A23872200057B67 /* 116. Populating Next Right Pointers in Each Node.swift in Sources */,
				CE4BCF9329B4C98E00D40AAB /* 38. Count and Say.swift in Sources */,
				CEB50BED2A14C6AC00490242 /* 107. Binary Tree Level Order Traversal II.swift in Sources */,
				CED04C082A11C0B400A3DB77 /* 1644.swift in Sources */,
				CE6775C82A0E14AF00ABE0C5 /* 11049.swift in Sources */,
				CE4BCF7B29B4C98E00D40AAB /* 24. Swap Nodes in Pairs.swift in Sources */,
				CEBD9A9B2A64D7DF001CD12A /* 16946.swift in Sources */,
				CE4BCF8929B4C98E00D40AAB /* 13. Roman to Integer.swift in Sources */,
				CE4BCF7729B4C98E00D40AAB /* 53. Maximum Subarray.swift in Sources */,
				CE089BEA2A8481F400CE710E /* 130. Surrounded Regions.swift in Sources */,
				CEB026C42A6F63CD00AF659A /* 14725.swift in Sources */,
				CEC9D52B29C7E95300F1142A /* 81. Search in Rotated Sorted Array II.swift in Sources */,
				CE4BCF9029B4C98E00D40AAB /* 58. Length of Last Word.swift in Sources */,
				CEC328522A4DA717000B3317 /* 2467.swift in Sources */,
				CE28710529BAFB1D0036D922 /* 71. Simplify Path.swift in Sources */,
				CE089BF62A90FD9B00CE710E /* 138. Copy List with Random Pointer.swift in Sources */,
				CEC328542A4E829F000B3317 /* 2239.swift in Sources */,
				CECDB8D229C0072C008FDAA8 /* 75. Sort Colors.swift in Sources */,
				CED8EE4B2A0C6CAE0007AD4D /* 103. Binary Tree Zigzag Level Order Traversal.swift in Sources */,
				CE089BE82A83AFF300CE710E /* 129. Sum Root to Leaf Numbers.swift in Sources */,
				CE4BCF7129B4C98E00D40AAB /* 64. Minimum Path Sum.swift in Sources */,
				CE4BCFA129B4C9C800D40AAB /* main.swift in Sources */,
				CE089BEE2A87B59B00CE710E /* 132. Palindrome Partitioning II.swift in Sources */,
				CEE1F60C2A09CFAA00C1A7DA /* 102. Binary Tree Level Order Traversal.swift in Sources */,
				CE4BCF7029B4C98E00D40AAB /* 44. Wildcard Matching.swift in Sources */,
				CE4BCF8329B4C98E00D40AAB /* 27. Remove Element.swift in Sources */,
				CE4BCF9829B4C98E00D40AAB /* 46. Permutations .swift in Sources */,
			);
			runOnlyForDeploymentPostprocessing = 0;
		};
/* End PBXSourcesBuildPhase section */

/* Begin XCBuildConfiguration section */
		CE3A618E296557E30012280D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEAD_CODE_STRIPPING = YES;
				DEBUG_INFORMATION_FORMAT = dwarf;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				ENABLE_TESTABILITY = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_DYNAMIC_NO_PIC = NO;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_OPTIMIZATION_LEVEL = 0;
				GCC_PREPROCESSOR_DEFINITIONS = (
					"DEBUG=1",
					"$(inherited)",
				);
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 12.3;
				MTL_ENABLE_DEBUG_INFO = INCLUDE_SOURCE;
				MTL_FAST_MATH = YES;
				ONLY_ACTIVE_ARCH = YES;
				SDKROOT = macosx;
				SWIFT_ACTIVE_COMPILATION_CONDITIONS = DEBUG;
				SWIFT_OPTIMIZATION_LEVEL = "-Onone";
			};
			name = Debug;
		};
		CE3A618F296557E30012280D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				ALWAYS_SEARCH_USER_PATHS = NO;
				CLANG_ANALYZER_NONNULL = YES;
				CLANG_ANALYZER_NUMBER_OBJECT_CONVERSION = YES_AGGRESSIVE;
				CLANG_CXX_LANGUAGE_STANDARD = "gnu++20";
				CLANG_ENABLE_MODULES = YES;
				CLANG_ENABLE_OBJC_ARC = YES;
				CLANG_ENABLE_OBJC_WEAK = YES;
				CLANG_WARN_BLOCK_CAPTURE_AUTORELEASING = YES;
				CLANG_WARN_BOOL_CONVERSION = YES;
				CLANG_WARN_COMMA = YES;
				CLANG_WARN_CONSTANT_CONVERSION = YES;
				CLANG_WARN_DEPRECATED_OBJC_IMPLEMENTATIONS = YES;
				CLANG_WARN_DIRECT_OBJC_ISA_USAGE = YES_ERROR;
				CLANG_WARN_DOCUMENTATION_COMMENTS = YES;
				CLANG_WARN_EMPTY_BODY = YES;
				CLANG_WARN_ENUM_CONVERSION = YES;
				CLANG_WARN_INFINITE_RECURSION = YES;
				CLANG_WARN_INT_CONVERSION = YES;
				CLANG_WARN_NON_LITERAL_NULL_CONVERSION = YES;
				CLANG_WARN_OBJC_IMPLICIT_RETAIN_SELF = YES;
				CLANG_WARN_OBJC_LITERAL_CONVERSION = YES;
				CLANG_WARN_OBJC_ROOT_CLASS = YES_ERROR;
				CLANG_WARN_QUOTED_INCLUDE_IN_FRAMEWORK_HEADER = YES;
				CLANG_WARN_RANGE_LOOP_ANALYSIS = YES;
				CLANG_WARN_STRICT_PROTOTYPES = YES;
				CLANG_WARN_SUSPICIOUS_MOVE = YES;
				CLANG_WARN_UNGUARDED_AVAILABILITY = YES_AGGRESSIVE;
				CLANG_WARN_UNREACHABLE_CODE = YES;
				CLANG_WARN__DUPLICATE_METHOD_MATCH = YES;
				COPY_PHASE_STRIP = NO;
				DEAD_CODE_STRIPPING = YES;
				DEBUG_INFORMATION_FORMAT = "dwarf-with-dsym";
				ENABLE_NS_ASSERTIONS = NO;
				ENABLE_STRICT_OBJC_MSGSEND = YES;
				GCC_C_LANGUAGE_STANDARD = gnu11;
				GCC_NO_COMMON_BLOCKS = YES;
				GCC_WARN_64_TO_32_BIT_CONVERSION = YES;
				GCC_WARN_ABOUT_RETURN_TYPE = YES_ERROR;
				GCC_WARN_UNDECLARED_SELECTOR = YES;
				GCC_WARN_UNINITIALIZED_AUTOS = YES_AGGRESSIVE;
				GCC_WARN_UNUSED_FUNCTION = YES;
				GCC_WARN_UNUSED_VARIABLE = YES;
				MACOSX_DEPLOYMENT_TARGET = 12.3;
				MTL_ENABLE_DEBUG_INFO = NO;
				MTL_FAST_MATH = YES;
				SDKROOT = macosx;
				SWIFT_COMPILATION_MODE = wholemodule;
				SWIFT_OPTIMIZATION_LEVEL = "-O";
			};
			name = Release;
		};
		CE3A6191296557E30012280D /* Debug */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEAD_CODE_STRIPPING = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Debug;
		};
		CE3A6192296557E30012280D /* Release */ = {
			isa = XCBuildConfiguration;
			buildSettings = {
				CODE_SIGN_IDENTITY = "-";
				CODE_SIGN_STYLE = Automatic;
				DEAD_CODE_STRIPPING = YES;
				PRODUCT_NAME = "$(TARGET_NAME)";
				SWIFT_VERSION = 5.0;
			};
			name = Release;
		};
/* End XCBuildConfiguration section */

/* Begin XCConfigurationList section */
		CE3A6184296557E30012280D /* Build configuration list for PBXProject "Swift" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CE3A618E296557E30012280D /* Debug */,
				CE3A618F296557E30012280D /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
		CE3A6190296557E30012280D /* Build configuration list for PBXNativeTarget "Algorithm_Swift" */ = {
			isa = XCConfigurationList;
			buildConfigurations = (
				CE3A6191296557E30012280D /* Debug */,
				CE3A6192296557E30012280D /* Release */,
			);
			defaultConfigurationIsVisible = 0;
			defaultConfigurationName = Release;
		};
/* End XCConfigurationList section */
	};
	rootObject = CE3A6181296557E30012280D /* Project object */;
}
